syntax = "proto3";

//api.[cqrs].[tag].[version]
package api.query.webclient.v1;

import "google/protobuf/empty.proto";
//import "google/protobuf/timestamp.proto";
import "google/protobuf/field_mask.proto";

//---

message StatusResponse {
  string message = 1;
}

service Status {
  rpc listen (google.protobuf.Empty) returns (ProfileDataList);
}

//---

service Profile {
  rpc Get (ProfilesRequest) returns (ProfileDataList);
  rpc Identification (google.protobuf.Empty) returns (ProfileData);
}

message ProfileData {
  string createdAt = 1;
  string nickname = 2;
  string email = 3;
  string description = 4;
}

message ProfileDataList {
  repeated ProfileData profiles = 1;
}

//--- Request

message ProfilesRequest {
  ProfileDataList profilesData = 1;
  google.protobuf.FieldMask fields = 2;
}


service Billing {
  rpc Get(BillingsRequest) returns (BillingDataList);
}

service BillingHistory {
  rpc Get(BillingsPaginationRequest) returns (BillingsCursorResponse);
}

message BillingData {
  string updateAt = 1;
  string nickname = 2;
  string value = 3;
  string status = 4;
}

message BillingDataList {
  repeated BillingData billings = 1;
}

//---

message BillingsRequest {
  BillingDataList billingsData = 1;
  google.protobuf.FieldMask fields = 2;
}

message BillingsCursorResponse {
  BillingDataList billingsData = 1;
  string cursor = 2;
}

//---

enum BillingKey {
  UNKNOWN = 0;
  CREATEDAT = 1;
  NICKNAME = 2;
  VALUE = 3;
  STATUS = 4;
}

enum Operand {
  NONE = 0;
  IN = 1; // in or ==
  OUT = 2; // out or !=
  LESS = 3; // less or <
  GREATER = 4; // greater or >
  EQLESS= 5; // not greater or <=
  EQGREATER = 6; // not less or >=
}

enum Direction {
  NOT = 0;
  MIN = 1;
  MAX = 2;
}

message Filter {
  BillingKey key = 1;
  Operand operand = 2;
  repeated string values = 3;
}

message Ordering {
  BillingKey key = 1;
  Direction direction = 2; 
}

message BillingsPaginationRequest {
  string cursor = 1;
  repeated Filter filters = 2;
  repeated Ordering orders = 3;
  int32 limit = 4;
}

service Charts {
  rpc GetChartId ( ChartData ) returns ( ChartData );
  rpc GetChartData ( google.protobuf.Empty ) returns ( ChartDataResponse );
}

message ChartData {
  string id = 1;
  string nickname = 2;
}

message ChartDataResponse {
  message NodeDataList {
    message NodeData {
      string id = 1;
      string type = 2;
      message Data {
        string label = 1;
        string text = 2;
      };
      Data data = 3;
      message Position {
        int32 x = 1;
        int32 y = 2;
      };
      Position position = 4;
    }
    repeated NodeData nodes = 1;
  }
  NodeDataList nodesData = 1;
  message EdgeDataList {
    message EdgeData {
      string id = 1;
      string type = 2;
      string source = 3;
      string sourceHandle = 4;
      string target = 5;
      string targetHandle = 6;
      message Data {
        string label = 1;
      };
      Data data = 7;
    }
    repeated EdgeData edges = 1;
  }
  EdgeDataList edgesData = 2;
}
