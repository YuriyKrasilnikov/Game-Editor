#Backend python

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: envoy-pv-volume
  namespace: development
  labels:
    app: envoy
    type: local
    tier: envoy-proxy
spec:
  storageClassName: manual
  capacity:
    storage: 10Gi
  accessModes:
    - ReadOnlyMany
  hostPath:
    path: "/minikube-host/StartupAcademy/otusArch/envoy-proxy/"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: envoy-pv-claim
  namespace: development
spec:
  storageClassName: manual
  accessModes:
    - ReadOnlyMany
  resources:
    requests:
      storage: 10Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: envoy-deployment
  namespace: development
spec:
  replicas: 1
  selector:
    matchLabels:
      app: envoy-containers
      tier: backend
  template:
    metadata:
      labels:
        app: envoy-containers
        tier: backend
    spec:
      containers:
      - name: envoy-pod
        image: envoyproxy/envoy:v1.14.4
        ports:
        - containerPort: 8080
          name: envoy-port
        volumeMounts:
        - name: envoy-storage
          mountPath: /etc/envoy/
      volumes:
      - name: envoy-storage
        persistentVolumeClaim:
          claimName: envoy-pv-claim

---
apiVersion: v1
kind: Service
metadata:
  name: envoy-service
  namespace: development
  labels:
    app: envoy-proxy
    tier: backend
spec:
  type: LoadBalancer
  selector:
    app: envoy-containers
  ports:
  - name: envoy-port
    protocol: TCP
    port: 8080 #тук тук
    nodePort: 30009
    targetPort: 8080
  externalIPs:
  - 172.17.0.3 #minikube ip