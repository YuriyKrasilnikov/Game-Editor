#Frontend react

apiVersion: v1
kind: PersistentVolume
metadata:
  name: frontend-src-pv-volume
  namespace: development
  labels:
    app: react-frontend
    type: local
    tier: frontend
spec:
  storageClassName: manual
  capacity:
    storage: 10Gi
  accessModes:
    - ReadOnlyMany
  hostPath:
    path: "/minikube-host/StartupAcademy/otusArch/grpc_react_client/src/"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: frontend-src-pv-claim
  namespace: development
spec:
  storageClassName: manual
  accessModes:
    - ReadOnlyMany
  resources:
    requests:
      storage: 10Gi

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: frontend-public-pv-volume
  namespace: development
  labels:
    app: react-frontend
    type: local
    tier: frontend
spec:
  storageClassName: manual
  capacity:
    storage: 10Gi
  accessModes:
    - ReadOnlyMany
  hostPath:
    path: "/minikube-host/StartupAcademy/otusArch/grpc_react_client/public/"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: frontend-public-pv-claim
  namespace: development
spec:
  storageClassName: manual
  accessModes:
    - ReadOnlyMany
  resources:
    requests:
      storage: 10Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: react-deployment
  namespace: development
spec:
  replicas: 2
  selector:
    matchLabels:
      app: react-frontend-containers
      tier: frontend
  template:
    metadata:
      labels:
        app: react-frontend-containers
        tier: frontend
    spec:
      containers:
      - name: react-pod
        image: grpc_react_client:0.1.0
        imagePullPolicy: Never 
        stdin: true
        tty: true
        ports:
        - containerPort: 3000
          name: frontend-port
        volumeMounts:
        - name: frontend-src-storage
          mountPath: /usr/frontend/src
        - name: frontend-public-storage
          mountPath: /usr/frontend/public
      volumes:
      - name: frontend-src-storage
        persistentVolumeClaim:
          claimName: frontend-src-pv-claim
      - name: frontend-public-storage
        persistentVolumeClaim:
          claimName: frontend-public-pv-claim

---
apiVersion: v1
kind: Service
metadata:
  name: react-service
  namespace: development
  labels:
    app: react-frontend
    tier: frontend
spec:
  type: NodePort
  selector:
    app: react-frontend-containers
  ports:
  - name: frontend-port
    protocol: TCP
    port: 3000 #тук тук
    nodePort: 30008
    targetPort: 3000
  - name: metrics
    port: 9002

---
# пока не придумал
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: react-service-monitoring
  namespace: monitoring
  labels:
    prometheus: kube-prometheus
    app: react-frontend
    tier: backend
spec:
  selector:
    matchLabels:
      app: react-frontend
  namespaceSelector:
    matchNames:
    - development
  endpoints:
  - port: metrics
    scheme: http
    interval: 60s