#GRPC Backend python

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: grpc-backend-deployment
  namespace: development
spec:
  replicas: 2
  selector:
    matchLabels:
      app: grpc-backend-containers
      tier: backend
  serviceName: grpc-backend-service
  template:
    metadata:
      labels:
        app: grpc-backend-containers
        tier: backend
    spec:
      containers:
      - name: grpc-backend-pod
        image: grpc_greeter_server:0.1.0
        imagePullPolicy: Never 
        ports:
        - name: grpc-bk-port
          containerPort: 9000
        volumeMounts:
        - name: grpc-backend-storage
          mountPath: /usr/src/app
      volumes:
      - name: grpc-backend-storage
        hostPath:
          path: /minikube-host/grpc_greeter_server/src/
      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  name: grpc-backend-service
  namespace: development
  labels:
    app: hello-grpc-server
    tier: backend
spec:
  type: NodePort
  selector:
    app: grpc-backend-containers
  ports:
  - name: grpc-bk-port
    protocol: TCP
    port: 9000 #тук тук
    nodePort: 30007
    targetPort: 9000
  - name: metrics
    port: 9001
  
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: grpc-backend-service-monitoring
  namespace: monitoring
  labels:
    prometheus: kube-prometheus
    app: hello-grpc-server
    tier: backend
spec:
  selector:
    matchLabels:
      app: hello-grpc-server
  namespaceSelector:
    matchNames:
    - development
  endpoints:
  - port: metrics
    path: /
    scheme: http
    interval: 60s